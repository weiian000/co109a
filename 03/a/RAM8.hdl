// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in =load,sel=address,a=L0,b=L1,c=L2,d=L3,e=L4,f=L5,g=L6,h=L7);

    Register(in =in,load=L0,out=o0);
    Register(in =in,load=L1,out=o1);
    Register(in =in,load=L2,out=o2);
    Register(in =in,load=L3,out=o3);
    Register(in =in,load=L4,out=o4);
    Register(in =in,load=L5,out=o5);
    Register(in =in,load=L6,out=o6);
    Register(in =in,load=L7,out=o7);

    Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address,out=out);


}